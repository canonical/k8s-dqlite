sudo apt update
sudo snap install microk8s --channel=1.31 --classic
sudo microk8s status --wait-ready
sudo microk8s enable prometheus
mkdir -p ~/.kube/
sudo microk8s config >~/.kube/config
sudo apt-get install -y sysstat

## Kube-burner
mkdir -p ../bin/
wget "https://github.com/kube-burner/kube-burner/releases/download/v1.2/kube-burner-1.2-Linux-x86_64.tar.gz"
tar -zxvf kube-burner-1.2-Linux-x86_64.tar.gz
sudo chmod +x /home/ubuntu/kube-burner

# grafana
sudo microk8s.kubectl port-forward -n observability svc/kube-prom-stack-grafana 30801:80 --address='0.0.0.0'
# (user/pass: admin/prom-operator) id 12006
# http://34.229.109.248:30801/login
# http://34.229.109.248:30801/d/R6abPf9Zz/kubernetes-apiserver?orgId=1

git clone https://github.com/canonical/k8s-dqlite.git
cd /home/ubuntu/k8s-dqlite/test/performance/templates
/home/ubuntu/kube-burner init --timeout 10m -c api-intensive.yaml

# make cluster
sudo microk8s add-node
sudo microk8s join xxx

#
pidstat -druh -p $(pgrep k8s-dqlite) 1 >/home/ubuntu/node1_metrics.log
pidstat -druh -p $(pgrep k8s-dqlite) 1 >/home/ubuntu/node2_metrics.log
pidstat -druh -p $(pgrep k8s-dqlite) 1 >/home/ubuntu/node3_metrics.log

# Download etcd v3.6.0
wget https://github.com/etcd-io/etcd/releases/download/v3.6.0/etcd-v3.6.0-linux-amd64.tar.gz
tar xzvf etcd-v3.6.0-linux-amd64.tar.gz
sudo mv etcd-v3.6.0-linux-amd64/etcd* /usr/local/bin/
etcd --version

# certs
sudo snap install go --classic
sudo apt install golang-cfssl
sudo apt install make
git clone https://github.com/etcd-io/etcd.git
cd etcd/hack/tls-setup

# Edit the req-csr.json file to include the private IPs of your nodes
sudo vim hack/tls-setup/config/req-csr.json
{
    "CN": "etcd",
    "hosts": [
    "localhost",
    "127.0.0.1",
    "172.31.34.85",
    "172.31.37.184",
    "172.31.32.86"
    ],
    "key": {
    "algo": "rsa",
    "size": 2048
    },
    "names": [
    {
        "O": "autogenerated",
        "OU": "etcd cluster",
        "L": "the internet"
    }
    ]
}

export infra0=172.31.34.85
export infra1=172.31.37.184
export infra2=172.31.32.86

make

# move certs
# public IP 54.224.63.247 - >172.31.32.86 private IP
sudo scp -i /Users/louiseschmidtgen/MyUniqueKeyPair-b7f2634a.pem \
    /Users/louiseschmidtgen/etcd/hack/tls-setup/certs/ca.pem \
    ubuntu@54.224.63.247:/home/ubuntu

ubuntu@ip-172-31-32-86:~$ ls
172.31.32.86-key.pem ca.pem peer-172.31.32.86.pem
172.31.32.86.pem peer-172.31.32.86-key.pem

sudo scp -i /Users/louiseschmidtgen/MyUniqueKeyPair-b7f2634a.pem \
    /Users/louiseschmidtgen/etcd/hack/tls-setup/certs/172.31.34.85-key.pem \
    ubuntu@3.88.15.110:/home/ubuntu

ubuntu@ip-172-31-34-85:~$ ls
172.31.34.85-key.pem etcd kube-burner-1.2-Linux-x86_64.tar.gz
172.31.34.85.pem go peer-172.31.34.85-key.pem
LICENSE k8s-dqlite peer-172.31.34.85.pem
ca.pem kube-burner snap

sudo scp -i /Users/louiseschmidtgen/MyUniqueKeyPair-b7f2634a.pem \
    /Users/louiseschmidtgen/etcd/hack/tls-setup/certs/172.31.37.184-key.pem \
    ubuntu@34.229.109.248:/home/ubuntu

ubuntu@ip-172-31-37-184:~$ ls
172.31.37.184-key.pem ca.pem peer-172.31.37.184.pem
172.31.37.184.pem peer-172.31.37.184-key.pem

# initialize etcd cluster
etcd \
    --name etcd0 \
    --initial-advertise-peer-urls https://172.31.34.85:2380 \
    --listen-peer-urls https://172.31.34.85:2380 \
    --listen-client-urls https://172.31.34.85:2379,https://127.0.0.1:2379 \
    --advertise-client-urls https://172.31.34.85:2379 \
    --initial-cluster-token etcd-cluster-1 \
    --initial-cluster etcd0=https://172.31.34.85:2380,etcd1=https://172.31.37.184:2380,etcd2=https://172.31.32.86:2380 \
    --initial-cluster-state new \
    --client-cert-auth \
    --trusted-ca-file=ca.pem \
    --cert-file=172.31.34.85.pem \
    --key-file=172.31.34.85-key.pem \
    --peer-client-cert-auth \
    --peer-trusted-ca-file=ca.pem \
    --peer-cert-file=peer-172.31.34.85.pem \
    --peer-key-file=peer-172.31.34.85-key.pem

etcd \
    --name etcd1 \
    --initial-advertise-peer-urls https://172.31.37.184:2380 \
    --listen-peer-urls https://172.31.37.184:2380 \
    --listen-client-urls https://172.31.37.184:2379,https://127.0.0.1:2379 \
    --advertise-client-urls https://172.31.37.184:2379 \
    --initial-cluster-token etcd-cluster-1 \
    --initial-cluster etcd0=https://172.31.34.85:2380,etcd1=https://172.31.37.184:2380,etcd2=https://172.31.32.86:2380 \
    --initial-cluster-state new \
    --client-cert-auth \
    --trusted-ca-file=ca.pem \
    --cert-file=172.31.37.184.pem \
    --key-file=172.31.37.184-key.pem \
    --peer-client-cert-auth \
    --peer-trusted-ca-file=ca.pem \
    --peer-cert-file=peer-172.31.37.184.pem \
    --peer-key-file=peer-172.31.37.184-key.pem

etcd \
    --name etcd2 \
    --initial-advertise-peer-urls https://172.31.32.86:2380 \
    --listen-peer-urls https://172.31.32.86:2380 \
    --listen-client-urls https://172.31.32.86:2379,https://127.0.0.1:2379 \
    --advertise-client-urls https://172.31.32.86:2379 \
    --initial-cluster-token etcd-cluster-1 \
    --initial-cluster etcd0=https://172.31.34.85:2380,etcd1=https://172.31.37.184:2380,etcd2=https://172.31.32.86:2380 \
    --initial-cluster-state new \
    --client-cert-auth \
    --trusted-ca-file=ca.pem \
    --cert-file=172.31.32.86.pem \
    --key-file=172.31.32.86-key.pem \
    --peer-client-cert-auth \
    --peer-trusted-ca-file=ca.pem \
    --peer-cert-file=peer-172.31.32.86.pem \
    --peer-key-file=peer-172.31.32.86-key.pem

# Microk8s etcd
sudo cp ca.pem /var/snap/microk8s/current/certs/etcd-ca.crt
sudo cp 172.31.34.85.pem /var/snap/microk8s/current/certs/etcd-client.crt
sudo cp 172.31.34.85-key.pem /var/snap/microk8s/current/certs/etcd-client.key

# Api server
echo --etcd-servers=https://172.31.34.85:2379,https://172.31.37.184:2379,https://172.31.32.86:2379 | sudo tee -a /var/snap/microk8s/current/args/kube-apiserver
echo --etcd-cafile=/var/snap/microk8s/current/certs/etcd-ca.crt | sudo tee -a /var/snap/microk8s/current/args/kube-apiserver
echo --etcd-certfile=/var/snap/microk8s/current/certs/etcd-client.crt | sudo tee -a /var/snap/microk8s/current/args/kube-apiserver
echo --etcd-keyfile=/var/snap/microk8s/current/certs/etcd-client.key | sudo tee -a /var/snap/microk8s/current/args/kube-apiserver

ubuntu@ip-172-31-34-85:~$ sudo cat /var/snap/microk8s/current/args/kube-apiserver | grep etcd
--etcd-servers=https://172.31.34.85:12379,https://172.31.37.184:12379,https://172.31.32.86:12379
--etcd-cafile=/var/snap/microk8s/current/certs/etcd-ca.crt
--etcd-certfile=/var/snap/microk8s/current/certs/etcd-client.crt
--etcd-keyfile=/var/snap/microk8s/current/certs/etcd-client.key

etcdctl --endpoints=https://127.0.0.1:2379   --cacert=ca.pem   --cert=172.31.34.85.pem   --key=172.31.34.85-key.pem   endpoint health

ubuntu@ip-172-31-34-85:~$ sudo microk8s status
microk8s is running
datastore endpoints:
172.31.34.85:2379
172.31.37.184:2379
172.31.32.86:2379

# Add other nodes to the cluster
sudo microk8s add-node
sudo microk8s join xxx

sudo cp ca.pem /var/snap/microk8s/current/certs/etcd-ca.crt
sudo cp 172.31.37.184.pem /var/snap/microk8s/current/certs/etcd-client.crt
sudo cp 172.31.37.184-key.pem /var/snap/microk8s/current/certs/etcd-client.key

sudo sed -i '/--etcd-servers/d' /var/snap/microk8s/current/args/kube-apiserver

sudo cp ca.pem /var/snap/microk8s/current/certs/etcd-ca.crt
sudo cp 172.31.37.184.pem /var/snap/microk8s/current/certs/etcd-client.crt
sudo cp 172.31.37.184-key.pem /var/snap/microk8s/current/certs/etcd-client.key

sudo cp ca.pem /var/snap/microk8s/current/certs/etcd-ca.crt
sudo cp 172.31.32.86.pem /var/snap/microk8s/current/certs/etcd-client.crt
sudo cp 172.31.32.86-key.pem /var/snap/microk8s/current/certs/etcd-client.key

sudo snap restart microk8s
# Finally
ubuntu@ip-172-31-37-184:~$ sudo microk8s kubectl get no -A -o wide
NAME STATUS ROLES AGE VERSION INTERNAL-IP EXTERNAL-IP OS-IMAGE KERNEL-VERSION CONTAINER-RUNTIME
ip-172-31-32-86 Ready v1.31.7 172.31.32.86 24.04.2 LTS 6.8.0-1024-aws containerd://1.6.28 <none >1s <none >Ubuntu
ip-172-31-34-85 Ready v1.31.7 172.31.34.85 24.04.2 LTS 6.8.0-1024-aws containerd://1.6.28 <none >13m <none >Ubuntu
ip-172-31-37-184 Ready v1.31.7 172.31.37.184 24.04.2 LTS 6.8.0-1024-aws containerd://1.6.28 <none >4m24s <none >Ubuntu

okay disk pressure:
ubuntu@ip-172-31-34-85:~$ df -h
Filesystem Size Used Avail Use% Mounted on
/dev/root 6.8G 5.5G 1.3G 82% /

# bumped volume size to 20 GB in AWS console
sudo growpart /dev/nvme0n1 1
sudo resize2fs /dev/nvme0n1p1

# happy pods
ubuntu@ip-172-31-34-85:~$ sudo microk8s kubectl get po -A
NAMESPACE       NAME                                                     READY   STATUS    RESTARTS      AGE
kube-system     calico-kube-controllers-759cd8b574-rclcc                 1/1     Running   0             52m
kube-system     calico-node-2lssj                                        1/1     Running   0             43m
kube-system     calico-node-458pp                                        1/1     Running   0             44m
kube-system     calico-node-lsf9r                                        1/1     Running   0             39m
kube-system     coredns-7896dbf49-4dhnn                                  1/1     Running   0             38m
kube-system     hostpath-provisioner-5fbc49d86c-rmkdm                    1/1     Running   0             38m
observability   alertmanager-kube-prom-stack-kube-prome-alertmanager-0   2/2     Running   1 (37m ago)   37m
observability   kube-prom-stack-grafana-649cb6588b-d44h4                 3/3     Running   0             37m
observability   kube-prom-stack-kube-prome-operator-7c7d5757db-tbh4j     1/1     Running   0             37m
observability   kube-prom-stack-kube-state-metrics-7c69654b66-2gx55      1/1     Running   0             37m
observability   kube-prom-stack-prometheus-node-exporter-5gbrr           1/1     Running   0             2m43s
observability   kube-prom-stack-prometheus-node-exporter-lfcq5           1/1     Running   0             37m
observability   kube-prom-stack-prometheus-node-exporter-p7nhq           1/1     Running   0             37m
observability   loki-0                                                   1/1     Running   0             37m
observability   loki-promtail-dhvxx                                      1/1     Running   0             37m
observability   loki-promtail-krxzd                                      1/1     Running   0             37m
observability   loki-promtail-wjv85                                      1/1     Running   0             2m44s
observability   prometheus-kube-prom-stack-kube-prome-prometheus-0       2/2     Running   0             37m
observability   tempo-0                                                  2/2     Running   0             37m



sudo chown root:microk8s /var/snap/microk8s/current/certs/etcd*
   68  sudo chmod 640 /var/snap/microk8s/current/certs/etcd-client.crt
   69  sudo chmod 640 /var/snap/microk8s/current/certs/etcd-client.key
   70  sudo chmod 640 /var/snap/microk8s/current/certs/etcd-ca.crt