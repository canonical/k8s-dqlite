name: Integration Test K8s-snap

on:
  push:
    branches: ["master"]
  pull_request:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: K8s-snap Integration Test on ${{ matrix.os }} ${{ matrix.arch }}
    runs-on: ${{ matrix.arch == 'arm64' && 'self-hosted-linux-arm64-jammy-large' || 'self-hosted-linux-amd64-jammy-large' }}
    strategy:
      matrix:
        os: ["ubuntu:20.04", "ubuntu:22.04", "ubuntu:24.04"]
        arch: ["arm64", "amd64"]
    steps:
      - name: Checking out repo
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install tox
        run: pip install tox
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - name: Download latest k8s-snap
        run: |
          sudo snap download k8s --channel=latest/edge --basename k8s
      - name: Install lxd
        uses: canonical/k8s-snap/.github/actions/install-lxd@main
      - name: Build k8s-dqlite
        run: |
          make static
      - name: Unpack Snap
        run: |
          sudo unsquashfs -d snap-unpack-dir k8s.snap
      - name: Replace k8s-dqlite binary
        run: |
          sudo cp ./bin/static/k8s-dqlite snap-unpack-dir/bin/k8s-dqlite
          sudo chmod o+r snap-unpack-dir/bin/k8s-dqlite
      - name: Repack Snap
        run: |
          sudo mksquashfs snap-unpack-dir k8s-updated.snap -noappend -comp lzo -no-fragments
      - name: Running
        env:
          TEST_SNAP: ${{ github.workspace }}/k8s-updated.snap
          TEST_SUBSTRATE: lxd
          TEST_LXD_IMAGE: ${{ matrix.os}}
          TEST_INSPECTION_REPORTS_DIR: ${{ github.workspace }}/inspection-reports
        run: |
          git clone https://github.com/canonical/k8s-snap.git      
          cd k8s-snap/tests/integration && sg lxd -c 'tox -e integration -- --tags up_to_weekly'
      - name: Prepare inspection reports
        if: failure()
        run: |
          tar -czvf inspection-reports.tar.gz -C ${{ github.workspace }} inspection-reports
      - name: Upload inspection report artifact
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: inspection-reports
          path: ${{ github.workspace }}/inspection-reports.tar.gz
