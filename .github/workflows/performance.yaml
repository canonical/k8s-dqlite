name: Performance Test K8s-snap

on:
  push:
    branches: ["master", "comparison-v1.3.1"]
  pull_request:

permissions:
  pull-requests: write
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  BASE_SHA: ${{ github.before || github.event.pull_request.base.sha }}
  BASE_BRANCH: ${{ github.base_ref || github.ref }}
  TARGET_SHA: ${{ github.sha }}

jobs:
  build:
    name: K8s-snap Performance Test
    runs-on: self-hosted-linux-amd64-jammy-large
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          egress-policy: audit
      - name: Checking out repo
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install tox
        run: |
          pip install tox
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - name: Set-up R
        run: |
          sudo apt-get install -y --no-install-recommends r-base

          sudo mkdir -p /usr/local/lib/R/site-library/
          # Ensure that actions/cache is allowed to restore the R lib dir.
          sudo chown $USER /usr/local/lib/R/site-library/
      - name: Get R cache key
        id: get-r-cache-key
        run: |
          osVersion=$(lsb_release -rs)
          rVersion=$(dpkg -s r-base | grep Version | cut -d ' ' -f 2)
          key="r-libs-$osVersion-$rVersion"

          echo "r-cache-key=$key" >> "$GITHUB_OUTPUT"
      - name: Restore R package cache
        id: restore-r-cache
        uses: actions/cache@v4
        with:
          path: /usr/local/lib/R/site-library/
          key: ${{ steps.get-r-cache-key.outputs.r-cache-key }}
          restore-keys: ${{ steps.get-r-cache-key.outputs.r-cache-key }}
      - name: Install R dependencies
        if: steps.restore-r-cache.outputs.cache-hit != 'true'
        run: |
          install.packages(
            c("ggplot2", "dplyr", "optparse"),
            repos="https://cloud.r-project.org")
        shell: sudo Rscript {0}
      - name: Install lxd
        uses: canonical/k8s-snap/.github/actions/install-lxd@main
      - name: Patch k8s snap (head)
        uses: ./.github/actions/patch-k8s-snap
        with:
          out-snap-path: head.snap
      - name: Download snap with k8s-dqlite v1.3.1
        run: |
          sudo snap download k8s \
            --channel=latest/edge \
            --basename base-code
          sudo chmod o+r base-code.snap
      - name: Patch k8s snap (base)
        uses: ./.github/actions/patch-k8s-snap
        with:
          out-snap-path: base-code.snap
          build-commit: $BASE_SHA
      - name: Patch k8s snap v1.1.12
        uses: ./.github/actions/patch-k8s-snap
        with:
          out-snap-path: v1-1-12.snap
          build-commit: 0712a12f1a4da107ab40fd9021cb801dd98636aa
      - name: Run Performance test ${{ github.head_ref }} snap
        env:
          TEST_SNAP: ${{ github.workspace }}/head.snap
          TEST_SUBSTRATE: lxd
          TEST_LXD_IMAGE: ubuntu:22.04
          TEST_INSPECTION_REPORTS_DIR: ${{ github.workspace }}/inspection-reports
          TEST_METRICS_DIR: ${{ github.workspace }}/test/performance/results
          TEST_RUN_NAME: current
          TEST_KUBE_BURNER_ITERATIONS: 15
          TEST_ENABLE_PROFILING: 0
        run: |
          cd test/performance
          sg lxd -c 'tox -e performance'
      - name: Run Performance test for base code snap
        env:
          TEST_SNAP: ${{ github.workspace }}/base-code.snap
          TEST_SUBSTRATE: lxd
          TEST_LXD_IMAGE: ubuntu:22.04
          TEST_INSPECTION_REPORTS_DIR: ${{ github.workspace }}/inspection-reports
          TEST_METRICS_DIR: ${{ github.workspace }}/test/performance/results
          TEST_RUN_NAME: v1-3-1
          TEST_KUBE_BURNER_ITERATIONS: 15
          TEST_ENABLE_PROFILING: 0
        run: |
          cd test/performance
          sg lxd -c 'tox -e performance'
      - name: Run Performance test for v1-6-0 snap
        env:
          TEST_SNAP: ${{ github.workspace }}/v1-1-12.snap
          TEST_SUBSTRATE: lxd
          TEST_LXD_IMAGE: ubuntu:22.04
          TEST_INSPECTION_REPORTS_DIR: ${{ github.workspace }}/inspection-reports
          TEST_METRICS_DIR: ${{ github.workspace }}/test/performance/results
          TEST_RUN_NAME: v1-1-12
          TEST_KUBE_BURNER_ITERATIONS: 15
          TEST_ENABLE_PROFILING: 0
        run: |
          cd test/performance
          sg lxd -c 'tox -e performance'
      - name: Generate aggregated Graphs
        if: always()
        run: |
          cd test/performance
          mkdir -p ./results/aggregated-results/single-node
          cp ./results/head/single-node/metrics.log \
             ./results/aggregated-results/single-node/head-metrics.log
          cp ./results/base-code/single-node/metrics.log \
             ./results/aggregated-results/single-node/base-metrics.log
          cp ./results/v1-1-12/single-node/metrics.log \
              ./results/aggregated-results/single-node/v1-1-12-metrics.log
          sudo Rscript parse-performance-metrics.R \
            -p ./results/aggregated-results/single-node/ \
            -o ./results/aggregated-results/single-node/ \
            -f *metrics.log
      - name: Upload performance result
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: performance-results
          path: ${{ github.workspace }}/test/performance/results
      - name: Prepare inspection reports
        if: always()
        run: |
          tar -czvf inspection-reports.tar.gz -C ${{ github.workspace }} inspection-reports
          echo "artifact_name=inspection-reports" | sed 's/:/-/g' >> $GITHUB_ENV
      - name: Upload inspection report artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.artifact_name }}
          path: ${{ github.workspace }}/inspection-reports.tar.gz
      - name: Upload base-code.snap
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: base-code.snap
          path: ${{ github.workspace }}/base-code.snap
      - name: Upload head.snap
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: head.snap
          path: ${{ github.workspace }}/head.snap
